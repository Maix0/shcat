!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/rparodi/Documents/ft_math/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(NAME)	Makefile	/^$(NAME): $(OBJ) $(LIB_OBJ)$/;"	t
$(OBJDIRNAME)/%.o	Makefile	/^$(OBJDIRNAME)\/%.o: %.c$/;"	t
CC	Makefile	/^CC = cc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Werror -Wextra -Wall -Wno-unused-command-line-argument -g3 -MMD$/;"	m
END	Makefile	/^END = \\033[0m$/;"	m
FT_MATH	includes/ft_math.h	/^# define FT_MATH$/;"	d
GOLD	Makefile	/^GOLD = \\033[38;5;220m$/;"	m
GREEN	Makefile	/^GREEN = \\033[32m$/;"	m
GREY	Makefile	/^GREY = \\033[0;90m$/;"	m
LIB	Makefile	/^LIB =	$/;"	m
LIBDIRNAME	Makefile	/^LIBDIRNAME = libft$/;"	m
LIB_OBJ	Makefile	/^LIB_OBJ = $(addprefix $(OBJDIRNAME)\/,$(LIB:.c=.o))$/;"	m
NAME	Makefile	/^NAME = pipex$/;"	m
OBJ	Makefile	/^OBJ = $(addprefix $(OBJDIRNAME)\/,$(SRC:.c=.o))$/;"	m
OBJDIRNAME	Makefile	/^OBJDIRNAME = .\/objects$/;"	m
RED	Makefile	/^RED = \\033[0;31m$/;"	m
RM	Makefile	/^RM = rm -rf$/;"	m
SRC	Makefile	/^SRC =	$/;"	m
SRCDIRNAME	Makefile	/^SRCDIRNAME = sources$/;"	m
all	Makefile	/^all: header $(NAME) footer$/;"	t
bonus	Makefile	/^bonus: header $(OBJ) $(LIB_OBJ) footer$/;"	t
clean	Makefile	/^clean:$/;"	t
fclean	Makefile	/^fclean: clean$/;"	t
footer	Makefile	/^footer:$/;"	t
ft_equal	sources/ft_equal.c	/^char	ft_equal(double nb1, double nb2)$/;"	f	typeref:typename:char
ft_is_greater	sources/ft_is_greater.c	/^char	ft_is_greater(double nb1, double nb2)$/;"	f	typeref:typename:char
ft_is_greater_equal	sources/ft_is_greater.c	/^char	ft_is_greater_equal(double nb1, double nb2)$/;"	f	typeref:typename:char
ft_is_less	sources/ft_is_less.c	/^char	ft_is_less(double nb1, double nb2)$/;"	f	typeref:typename:char
ft_is_less_equal	sources/ft_is_less.c	/^char	ft_is_less_equal(double nb1, double nb2)$/;"	f	typeref:typename:char
ft_pow	sources/ft_pow.c	/^long long int	ft_pow(long long int base, long long int exponent)$/;"	f	typeref:typename:long long int
header	Makefile	/^header:$/;"	t
re	Makefile	/^re: header fclean all$/;"	t
